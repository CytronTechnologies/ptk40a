

HI-TECH Software PIC LITE Macro Assembler V9.83 build 10920 
                                                                                               Sat Apr 20 17:24:57 2013

HI-TECH Software Omniscient Code Generator (Lite mode) build 10920
     1  0000                     opt subtitle "HI-TECH Software Omniscient Code Generator (Lite mode) build 10920"
     2                           
     3                           opt pagewidth 120
     4                           
     5                           	opt lm
     6                           
     7                           	processor	16F877A
     8                           clrc	macro
     9                           	bcf	3,0
    10  0000                     	endm
    11                           clrz	macro
    12                           	bcf	3,2
    13  0000                     	endm
    14                           setc	macro
    15                           	bsf	3,0
    16  0000                     	endm
    17                           setz	macro
    18                           	bsf	3,2
    19  0000                     	endm
    20                           skipc	macro
    21                           	btfss	3,0
    22  0000                     	endm
    23                           skipz	macro
    24                           	btfss	3,2
    25  0000                     	endm
    26                           skipnc	macro
    27                           	btfsc	3,0
    28  0000                     	endm
    29                           skipnz	macro
    30                           	btfsc	3,2
    31  0000                     	endm
    32  0000                     indf	equ	0
    33  0000                     indf0	equ	0
    34  0002                     pc	equ	2
    35  0002                     pcl	equ	2
    36  0003                     status	equ	3
    37  0004                     fsr	equ	4
    38  0004                     fsr0	equ	4
    39  0001                     c	equ	1
    40  0000                     z	equ	0
    41  000A                     pclath	equ	10
    42                           # 32 "E:\Cytron SVN\PTK40A (PIC Training Kit)\Source Code\Examples\Example 8\Main E_8.c"
    43                           	psect config,class=CONFIG,delta=2 ;#
    44                           # 32 "E:\Cytron SVN\PTK40A (PIC Training Kit)\Source Code\Examples\Example 8\Main E_8.c"
    45  2007  FF32               	dw 0xFFFE & 0xFFFB & 0xFFF7 & 0xFFBF & 0xFF7F ;#
    46                           	FNCALL	_main,_adc_initialize
    47                           	FNCALL	_main,_pwm_initialize
    48                           	FNCALL	_main,_adc_on
    49                           	FNCALL	_main,_ui_adc_read
    50                           	FNCALL	_main,_pwm_set_duty_cycle
    51                           	FNROOT	_main
    52                           	global	_ADRESH
    53                           psect	text128,local,class=CODE,delta=2
    54                           global __ptext128
    55  0000                     __ptext128:
    56  001E                     _ADRESH	set	30
    57                           	global	_CCP1CON
    58  0017                     _CCP1CON	set	23
    59                           	global	_CCPR1L
    60  0015                     _CCPR1L	set	21
    61                           	global	_PORTA
    62  0005                     _PORTA	set	5
    63                           	global	_PORTB
    64  0006                     _PORTB	set	6
    65                           	global	_PORTC
    66  0007                     _PORTC	set	7
    67                           	global	_PORTD
    68  0008                     _PORTD	set	8
    69                           	global	_PORTE
    70  0009                     _PORTE	set	9
    71                           	global	_ADCS0
    72  00FE                     _ADCS0	set	254
    73                           	global	_ADCS1
    74  00FF                     _ADCS1	set	255
    75                           	global	_ADON
    76  00F8                     _ADON	set	248
    77                           	global	_CARRY
    78  0018                     _CARRY	set	24
    79                           	global	_CCP1M2
    80  00BA                     _CCP1M2	set	186
    81                           	global	_CCP1M3
    82  00BB                     _CCP1M3	set	187
    83                           	global	_CCP1X
    84  00BD                     _CCP1X	set	189
    85                           	global	_CCP1Y
    86  00BC                     _CCP1Y	set	188
    87                           	global	_CHS0
    88  00FB                     _CHS0	set	251
    89                           	global	_CHS1
    90  00FC                     _CHS1	set	252
    91                           	global	_CHS2
    92  00FD                     _CHS2	set	253
    93                           	global	_GIE
    94  005F                     _GIE	set	95
    95                           	global	_GO_DONE
    96  00FA                     _GO_DONE	set	250
    97                           	global	_RB4
    98  0034                     _RB4	set	52
    99                           	global	_RB5
   100  0035                     _RB5	set	53
   101                           	global	_T2CKPS0
   102  0090                     _T2CKPS0	set	144
   103                           	global	_T2CKPS1
   104  0091                     _T2CKPS1	set	145
   105                           	global	_TMR2ON
   106  0092                     _TMR2ON	set	146
   107                           	global	_ADRESL
   108  009E                     _ADRESL	set	158
   109                           	global	_PR2
   110  0092                     _PR2	set	146
   111                           	global	_TRISA
   112  0085                     _TRISA	set	133
   113                           	global	_TRISB
   114  0086                     _TRISB	set	134
   115                           	global	_TRISC
   116  0087                     _TRISC	set	135
   117                           	global	_TRISD
   118  0088                     _TRISD	set	136
   119                           	global	_TRISE
   120  0089                     _TRISE	set	137
   121                           	global	_ADCS2
   122  04FE                     _ADCS2	set	1278
   123                           	global	_ADFM
   124  04FF                     _ADFM	set	1279
   125                           	global	_PCFG0
   126  04F8                     _PCFG0	set	1272
   127                           	global	_PCFG1
   128  04F9                     _PCFG1	set	1273
   129                           	global	_PCFG2
   130  04FA                     _PCFG2	set	1274
   131                           	global	_PCFG3
   132  04FB                     _PCFG3	set	1275
   133                           	global	_EEADR
   134  010D                     _EEADR	set	269
   135                           	global	_EEDATA
   136  010C                     _EEDATA	set	268
   137                           	global	_EECON1
   138  018C                     _EECON1	set	396
   139                           	global	_EECON2
   140  018D                     _EECON2	set	397
   141                           	global	_RD
   142  0C60                     _RD	set	3168
   143                           	global	_WR
   144  0C61                     _WR	set	3169
   145                           	global	_WREN
   146  0C62                     _WREN	set	3170
   147                           	file	"Example8.as"
   148                           	line	#
   149                           psect cinit,class=CODE,delta=2
   150                           global start_initialization
   151  0744                     start_initialization:
   152                           
   153                           psect cinit,class=CODE,delta=2
   154                           global end_of_initialization
   155                           
   156                           ;End of C runtime variable initialization code
   157                           
   158  0744                     end_of_initialization:
   159  0744  0183               clrf status
   160  0745  120A  118A  2FBC   ljmp _main	;jump to C main() function
   161                           psect	cstackCOMMON,class=COMMON,space=1
   162                           global __pcstackCOMMON
   163  0070                     __pcstackCOMMON:
   164                           	global	?_pwm_initialize
   165  0070                     ?_pwm_initialize:	; 0 bytes @ 0x0
   166                           	global	??_pwm_initialize
   167  0070                     ??_pwm_initialize:	; 0 bytes @ 0x0
   168                           	global	?_pwm_set_duty_cycle
   169  0070                     ?_pwm_set_duty_cycle:	; 0 bytes @ 0x0
   170                           	global	?_adc_initialize
   171  0070                     ?_adc_initialize:	; 0 bytes @ 0x0
   172                           	global	??_adc_initialize
   173  0070                     ??_adc_initialize:	; 0 bytes @ 0x0
   174                           	global	?_adc_on
   175  0070                     ?_adc_on:	; 0 bytes @ 0x0
   176                           	global	??_adc_on
   177  0070                     ??_adc_on:	; 0 bytes @ 0x0
   178                           	global	?_ui_adc_read
   179  0070                     ?_ui_adc_read:	; 2 bytes @ 0x0
   180                           	global	?_main
   181  0070                     ?_main:	; 2 bytes @ 0x0
   182                           	global	pwm_set_duty_cycle@ui_duty_cycle
   183  0070                     pwm_set_duty_cycle@ui_duty_cycle:	; 2 bytes @ 0x0
   184  0070                     	ds	2
   185                           	global	??_pwm_set_duty_cycle
   186  0072                     ??_pwm_set_duty_cycle:	; 0 bytes @ 0x2
   187                           	global	??_ui_adc_read
   188  0072                     ??_ui_adc_read:	; 0 bytes @ 0x2
   189  0072                     	ds	2
   190                           	global	ui_adc_read@temp
   191  0074                     ui_adc_read@temp:	; 2 bytes @ 0x4
   192  0074                     	ds	2
   193                           	global	??_main
   194  0076                     ??_main:	; 0 bytes @ 0x6
   195                           	global	main@speed
   196  0076                     main@speed:	; 2 bytes @ 0x6
   197  0076                     	ds	2
   198 ;;Data sizes: Strings 0, constant 0, data 0, bss 0, persistent 0 stack 0
   199 ;;Auto spaces:   Size  Autos    Used
   200 ;; COMMON          14      8       8
   201 ;; BANK0           80      0       0
   202 ;; BANK1           80      0       0
   203 ;; BANK3           96      0       0
   204 ;; BANK2           96      0       0
   205                           
   206 ;;
   207 ;; Pointer list with targets:
   208                           
   209 ;; ?_ui_adc_read	unsigned int  size(1) Largest target is 0
   210 ;;
   211                           
   212                           
   213 ;;
   214 ;; Critical Paths under _main in COMMON
   215 ;;
   216 ;;   _main->_ui_adc_read
   217 ;;
   218 ;; Critical Paths under _main in BANK0
   219 ;;
   220 ;;   None.
   221 ;;
   222 ;; Critical Paths under _main in BANK1
   223 ;;
   224 ;;   None.
   225 ;;
   226 ;; Critical Paths under _main in BANK3
   227 ;;
   228 ;;   None.
   229 ;;
   230 ;; Critical Paths under _main in BANK2
   231 ;;
   232 ;;   None.
   233                           
   234 ;;
   235 ;;Main: autosize = 0, tempsize = 0, incstack = 0, save=0
   236 ;;
   237                           
   238 ;;
   239 ;;Call Graph Tables:
   240 ;;
   241 ;; ---------------------------------------------------------------------------------
   242 ;; (Depth) Function   	        Calls       Base Space   Used Autos Params    Refs
   243 ;; ---------------------------------------------------------------------------------
   244 ;; (0) _main                                                 2     2      0      75
   245 ;;                                              6 COMMON     2     2      0
   246 ;;                     _adc_initialize
   247 ;;                     _pwm_initialize
   248 ;;                             _adc_on
   249 ;;                        _ui_adc_read
   250 ;;                 _pwm_set_duty_cycle
   251 ;; ---------------------------------------------------------------------------------
   252 ;; (1) _ui_adc_read                                          6     4      2      30
   253 ;;                                              0 COMMON     6     4      2
   254 ;; ---------------------------------------------------------------------------------
   255 ;; (1) _pwm_set_duty_cycle                                   4     2      2      30
   256 ;;                                              0 COMMON     4     2      2
   257 ;; ---------------------------------------------------------------------------------
   258 ;; (1) _pwm_initialize                                       0     0      0       0
   259 ;; ---------------------------------------------------------------------------------
   260 ;; (1) _adc_on                                               0     0      0       0
   261 ;; ---------------------------------------------------------------------------------
   262 ;; (1) _adc_initialize                                       0     0      0       0
   263 ;; ---------------------------------------------------------------------------------
   264 ;; Estimated maximum stack depth 1
   265 ;; ---------------------------------------------------------------------------------
   266                           
   267 ;; Call Graph Graphs:
   268                           
   269 ;; _main (ROOT)
   270 ;;   _adc_initialize
   271 ;;   _pwm_initialize
   272 ;;   _adc_on
   273 ;;   _ui_adc_read
   274 ;;   _pwm_set_duty_cycle
   275 ;;
   276                           
   277 ;; Address spaces:
   278                           
   279 ;;Name               Size   Autos  Total    Cost      Usage
   280 ;;BITCOMMON            E      0       0       0        0.0%
   281 ;;EEDATA             100      0       0       0        0.0%
   282 ;;NULL                 0      0       0       0        0.0%
   283 ;;CODE                 0      0       0       0        0.0%
   284 ;;COMMON               E      8       8       1       57.1%
   285 ;;BITSFR0              0      0       0       1        0.0%
   286 ;;SFR0                 0      0       0       1        0.0%
   287 ;;BITSFR1              0      0       0       2        0.0%
   288 ;;SFR1                 0      0       0       2        0.0%
   289 ;;STACK                0      0       1       2        0.0%
   290 ;;ABS                  0      0       0       3        0.0%
   291 ;;BITBANK0            50      0       0       4        0.0%
   292 ;;BITSFR3              0      0       0       4        0.0%
   293 ;;SFR3                 0      0       0       4        0.0%
   294 ;;BANK0               50      0       0       5        0.0%
   295 ;;BITSFR2              0      0       0       5        0.0%
   296 ;;SFR2                 0      0       0       5        0.0%
   297 ;;BITBANK1            50      0       0       6        0.0%
   298 ;;BANK1               50      0       0       7        0.0%
   299 ;;BITBANK3            60      0       0       8        0.0%
   300 ;;BANK3               60      0       0       9        0.0%
   301 ;;BITBANK2            60      0       0      10        0.0%
   302 ;;BANK2               60      0       0      11        0.0%
   303 ;;DATA                 0      0       0      12        0.0%
   304                           
   305                           	global	_main
   306                           psect	maintext,global,class=CODE,delta=2
   307                           global __pmaintext
   308  07BC                     __pmaintext:
   309                           
   310 ;; *************** function _main *****************
   311 ;; Defined at:
   312 ;;		line 57 in file "E:\Cytron SVN\PTK40A (PIC Training Kit)\Source Code\Examples\Example 8\Main E_8.c"
   313 ;; Parameters:    Size  Location     Type
   314 ;;		None
   315 ;; Auto vars:     Size  Location     Type
   316 ;;  speed           2    6[COMMON] unsigned int 
   317 ;; Return value:  Size  Location     Type
   318 ;;                  2  1395[COMMON] int 
   319 ;; Registers used:
   320 ;;		wreg, status,2, status,0, btemp+1, pclath, cstack
   321 ;; Tracked objects:
   322 ;;		On entry : 17F/0
   323 ;;		On exit  : 0/0
   324 ;;		Unchanged: 0/0
   325 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   326 ;;      Params:         0       0       0       0       0
   327 ;;      Locals:         2       0       0       0       0
   328 ;;      Temps:          0       0       0       0       0
   329 ;;      Totals:         2       0       0       0       0
   330 ;;Total ram usage:        2 bytes
   331 ;; Hardware stack levels required when called:    1
   332 ;; This function calls:
   333 ;;		_adc_initialize
   334 ;;		_pwm_initialize
   335 ;;		_adc_on
   336 ;;		_ui_adc_read
   337 ;;		_pwm_set_duty_cycle
   338 ;; This function is called by:
   339 ;;		Startup code after reset
   340 ;; This function uses a non-reentrant model
   341 ;;
   342                           psect	maintext
   343                           	file	"E:\Cytron SVN\PTK40A (PIC Training Kit)\Source Code\Examples\Example 8\Main E_8.c
                                 "
   344                           	line	57
   345                           	global	__size_of_main
   346  0044                     	__size_of_main	equ	__end_of_main-_main
   347                           	
   348  07BC                     _main:	
   349                           	opt	stack 7
   350                           ; Regs used in _main: [wreg+status,2+status,0+btemp+1+pclath+cstack]
   351                           	line	58
   352                           	
   353  07BC                     l4065:	
   354                           ;Main E_8.c: 58: unsigned int speed = 0;
   355  07BC  01F6               	clrf	(main@speed)
   356  07BD  01F7               	clrf	(main@speed+1)
   357                           	line	60
   358                           ;Main E_8.c: 60: PORTA = 0;
   359  07BE  1283               	bcf	status, 5	;RP0=0, select bank0
   360  07BF  1303               	bcf	status, 6	;RP1=0, select bank0
   361  07C0  0185               	clrf	(5)	;volatile
   362                           	line	61
   363                           ;Main E_8.c: 61: PORTB = 0;
   364  07C1  0186               	clrf	(6)	;volatile
   365                           	line	62
   366                           ;Main E_8.c: 62: PORTC = 0;
   367  07C2  0187               	clrf	(7)	;volatile
   368                           	line	63
   369                           ;Main E_8.c: 63: PORTD = 0;
   370  07C3  0188               	clrf	(8)	;volatile
   371                           	line	64
   372                           ;Main E_8.c: 64: PORTE = 0;
   373  07C4  0189               	clrf	(9)	;volatile
   374                           	line	70
   375                           	
   376  07C5                     l4067:	
   377                           ;Main E_8.c: 70: TRISA = 0b00010001;
   378  07C5  3011               	movlw	(011h)
   379  07C6  1683               	bsf	status, 5	;RP0=1, select bank1
   380  07C7  1303               	bcf	status, 6	;RP1=0, select bank1
   381  07C8  0085               	movwf	(133)^080h	;volatile
   382                           	line	71
   383                           	
   384  07C9                     l4069:	
   385                           ;Main E_8.c: 71: TRISB = 0b00001111;
   386  07C9  300F               	movlw	(0Fh)
   387  07CA  0086               	movwf	(134)^080h	;volatile
   388                           	line	72
   389                           	
   390  07CB                     l4071:	
   391                           ;Main E_8.c: 72: TRISC = 0b10010011;
   392  07CB  3093               	movlw	(093h)
   393  07CC  0087               	movwf	(135)^080h	;volatile
   394                           	line	73
   395                           	
   396  07CD                     l4073:	
   397                           ;Main E_8.c: 73: TRISD = 0;
   398  07CD  0188               	clrf	(136)^080h	;volatile
   399                           	line	74
   400                           	
   401  07CE                     l4075:	
   402                           ;Main E_8.c: 74: TRISE = 0;
   403  07CE  0189               	clrf	(137)^080h	;volatile
   404                           	line	77
   405                           	
   406  07CF                     l4077:	
   407                           ;Main E_8.c: 77: adc_initialize();
   408  07CF  120A  118A  2758   	fcall	_adc_initialize
              120A  118A         
   409                           	line	80
   410                           	
   411  07D4                     l4079:	
   412                           ;Main E_8.c: 80: pwm_initialize();
   413  07D4  120A  118A  2748   	fcall	_pwm_initialize
              120A  118A         
   414                           	line	88
   415                           	
   416  07D9                     l4081:	
   417                           ;Main E_8.c: 88: adc_on();
   418  07D9  120A  118A  2740   	fcall	_adc_on
              120A  118A         
   419                           	line	89
   420                           	
   421  07DE                     l4083:	
   422                           ;Main E_8.c: 89: RB4 = 1;
   423  07DE  1283               	bcf	status, 5	;RP0=0, select bank0
   424  07DF  1303               	bcf	status, 6	;RP1=0, select bank0
   425  07E0  1606               	bsf	(52/8),(52)&7
   426                           	line	90
   427                           	
   428  07E1                     l4085:	
   429                           ;Main E_8.c: 90: RB5 = 0;
   430  07E1  1286               	bcf	(53/8),(53)&7
   431  07E2  2FE3               	goto	l4087
   432                           	line	92
   433                           ;Main E_8.c: 92: while(1)
   434                           	
   435  07E3                     l1396:	
   436                           	line	94
   437                           	
   438  07E3                     l4087:	
   439                           ;Main E_8.c: 93: {
   440                           ;Main E_8.c: 94: speed = ui_adc_read();
   441  07E3  120A  118A  2789   	fcall	_ui_adc_read
              120A  118A         
   442  07E8  0871               	movf	(1+(?_ui_adc_read)),w
   443  07E9  01F7               	clrf	(main@speed+1)
   444  07EA  07F7               	addwf	(main@speed+1)
   445  07EB  0870               	movf	(0+(?_ui_adc_read)),w
   446  07EC  01F6               	clrf	(main@speed)
   447  07ED  07F6               	addwf	(main@speed)
   448                           
   449                           	line	95
   450                           	
   451  07EE                     l4089:	
   452                           ;Main E_8.c: 95: pwm_set_duty_cycle(speed);
   453  07EE  0877               	movf	(main@speed+1),w
   454  07EF  01F1               	clrf	(?_pwm_set_duty_cycle+1)
   455  07F0  07F1               	addwf	(?_pwm_set_duty_cycle+1)
   456  07F1  0876               	movf	(main@speed),w
   457  07F2  01F0               	clrf	(?_pwm_set_duty_cycle)
   458  07F3  07F0               	addwf	(?_pwm_set_duty_cycle)
   459                           
   460  07F4  120A  118A  276A   	fcall	_pwm_set_duty_cycle
              120A  118A         
   461  07F9  2FE3               	goto	l4087
   462                           	line	96
   463                           	
   464  07FA                     l1397:	
   465                           	line	92
   466  07FA  2FE3               	goto	l4087
   467                           	
   468  07FB                     l1398:	
   469  07FB  2FFC               	goto	l1400
   470                           	line	97
   471                           ;Main E_8.c: 96: }
   472                           ;Main E_8.c: 97: while(1) continue;
   473                           	
   474  07FC                     l1399:	
   475                           	
   476  07FC                     l1400:	
   477  07FC  2FFC               	goto	l1400
   478                           	
   479  07FD                     l1401:	
   480                           	line	98
   481                           	
   482  07FD                     l1402:	
   483                           	global	start
   484  07FD  120A  118A  2800   	ljmp	start
   485                           	opt stack 0
   486                           GLOBAL	__end_of_main
   487  0800                     	__end_of_main:
   488 ;; =============== function _main ends ============
   489                           
   490                           	signat	_main,90
   491                           	global	_ui_adc_read
   492                           psect	text129,local,class=CODE,delta=2
   493                           global __ptext129
   494  0789                     __ptext129:
   495                           
   496 ;; *************** function _ui_adc_read *****************
   497 ;; Defined at:
   498 ;;		line 104 in file "E:\Cytron SVN\PTK40A (PIC Training Kit)\Source Code\Examples\Example 8\adc.c"
   499 ;; Parameters:    Size  Location     Type
   500 ;;		None
   501 ;; Auto vars:     Size  Location     Type
   502 ;;  temp            2    4[COMMON] unsigned int 
   503 ;; Return value:  Size  Location     Type
   504 ;;                  2    0[COMMON] unsigned int 
   505 ;; Registers used:
   506 ;;		wreg, status,2, status,0, btemp+1
   507 ;; Tracked objects:
   508 ;;		On entry : 0/0
   509 ;;		On exit  : 0/0
   510 ;;		Unchanged: 0/0
   511 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   512 ;;      Params:         2       0       0       0       0
   513 ;;      Locals:         2       0       0       0       0
   514 ;;      Temps:          2       0       0       0       0
   515 ;;      Totals:         6       0       0       0       0
   516 ;;Total ram usage:        6 bytes
   517 ;; Hardware stack levels used:    1
   518 ;; This function calls:
   519 ;;		Nothing
   520 ;; This function is called by:
   521 ;;		_main
   522 ;; This function uses a non-reentrant model
   523 ;;
   524                           psect	text129
   525                           	file	"E:\Cytron SVN\PTK40A (PIC Training Kit)\Source Code\Examples\Example 8\adc.c"
   526                           	line	104
   527                           	global	__size_of_ui_adc_read
   528  0033                     	__size_of_ui_adc_read	equ	__end_of_ui_adc_read-_ui_adc_read
   529                           	
   530  0789                     _ui_adc_read:	
   531                           	opt	stack 7
   532                           ; Regs used in _ui_adc_read: [wreg+status,2+status,0+btemp+1]
   533                           	line	105
   534                           	
   535  0789                     l4045:	
   536                           ;adc.c: 105: unsigned int temp = 0;
   537  0789  01F4               	clrf	(ui_adc_read@temp)
   538  078A  01F5               	clrf	(ui_adc_read@temp+1)
   539                           	line	107
   540                           	
   541  078B                     l4047:	
   542                           ;adc.c: 107: CHS2 = 0;
   543  078B  1283               	bcf	status, 5	;RP0=0, select bank0
   544  078C  1303               	bcf	status, 6	;RP1=0, select bank0
   545  078D  129F               	bcf	(253/8),(253)&7
   546                           	line	108
   547                           	
   548  078E                     l4049:	
   549                           ;adc.c: 108: CHS1 = 0;
   550  078E  121F               	bcf	(252/8),(252)&7
   551                           	line	109
   552                           	
   553  078F                     l4051:	
   554                           ;adc.c: 109: CHS0 = 0;
   555  078F  119F               	bcf	(251/8),(251)&7
   556                           	line	112
   557                           	
   558  0790                     l4053:	
   559                           ;adc.c: 112: _delay((unsigned long)((1)*(20000000/4000.0)));
   560                           	opt asmopt_off
   561  0790  3007               movlw	7
   562  0791  00F3               movwf	((??_ui_adc_read+0)+0+1),f
   563  0792  307D               	movlw	125
   564  0793  00F2               movwf	((??_ui_adc_read+0)+0),f
   565  0794                     u2277:
   566  0794  0BF2               	decfsz	((??_ui_adc_read+0)+0),f
   567  0795  2F94               	goto	u2277
   568  0796  0BF3               	decfsz	((??_ui_adc_read+0)+0+1),f
   569  0797  2F94               	goto	u2277
   570                           opt asmopt_on
   571                           
   572                           	line	119
   573                           	
   574  0798                     l4055:	
   575                           ;adc.c: 119: GO_DONE = 1;
   576  0798  1283               	bcf	status, 5	;RP0=0, select bank0
   577  0799  1303               	bcf	status, 6	;RP1=0, select bank0
   578  079A  151F               	bsf	(250/8),(250)&7
   579                           	line	120
   580                           ;adc.c: 120: while (GO_DONE == 1);
   581  079B  2F9C               	goto	l696
   582                           	
   583  079C                     l697:	
   584                           	
   585  079C                     l696:	
   586  079C  191F               	btfsc	(250/8),(250)&7
   587  079D  2F9F               	goto	u2261
   588  079E  2FA0               	goto	u2260
   589  079F                     u2261:
   590  079F  2F9C               	goto	l696
   591  07A0                     u2260:
   592  07A0  2FA1               	goto	l4057
   593                           	
   594  07A1                     l698:	
   595                           	line	124
   596                           	
   597  07A1                     l4057:	
   598                           ;adc.c: 124: temp = (unsigned int)ADRESH << 8;
   599  07A1  081E               	movf	(30),w	;volatile
   600  07A2  00F2               	movwf	(??_ui_adc_read+0)+0
   601  07A3  01F3               	clrf	(??_ui_adc_read+0)+0+1
   602  07A4  0872               	movf	(??_ui_adc_read+0)+0,w
   603  07A5  00F3               	movwf	(??_ui_adc_read+0)+1
   604  07A6  01F2               	clrf	(??_ui_adc_read+0)+0
   605  07A7  0872               	movf	0+(??_ui_adc_read+0)+0,w
   606  07A8  00F4               	movwf	(ui_adc_read@temp)
   607  07A9  0873               	movf	1+(??_ui_adc_read+0)+0,w
   608  07AA  00F5               	movwf	(ui_adc_read@temp+1)
   609                           	line	125
   610                           	
   611  07AB                     l4059:	
   612                           ;adc.c: 125: temp = temp + ADRESL;
   613  07AB  1683               	bsf	status, 5	;RP0=1, select bank1
   614  07AC  1303               	bcf	status, 6	;RP1=0, select bank1
   615  07AD  081E               	movf	(158)^080h,w	;volatile
   616  07AE  0774               	addwf	(ui_adc_read@temp),w
   617  07AF  00F4               	movwf	(ui_adc_read@temp)
   618  07B0  0875               	movf	(ui_adc_read@temp+1),w
   619  07B1  1803               	skipnc
   620  07B2  0A75               	incf	(ui_adc_read@temp+1),w
   621  07B3  00F5               	movwf	((ui_adc_read@temp))+1
   622                           	line	126
   623                           	
   624  07B4                     l4061:	
   625                           ;adc.c: 126: return temp;
   626  07B4  0875               	movf	(ui_adc_read@temp+1),w
   627  07B5  01F1               	clrf	(?_ui_adc_read+1)
   628  07B6  07F1               	addwf	(?_ui_adc_read+1)
   629  07B7  0874               	movf	(ui_adc_read@temp),w
   630  07B8  01F0               	clrf	(?_ui_adc_read)
   631  07B9  07F0               	addwf	(?_ui_adc_read)
   632                           
   633  07BA  2FBB               	goto	l699
   634                           	
   635  07BB                     l4063:	
   636                           	line	127
   637                           	
   638  07BB                     l699:	
   639  07BB  0008               	return
   640                           	opt stack 0
   641                           GLOBAL	__end_of_ui_adc_read
   642  07BC                     	__end_of_ui_adc_read:
   643 ;; =============== function _ui_adc_read ends ============
   644                           
   645                           	signat	_ui_adc_read,90
   646                           	global	_pwm_set_duty_cycle
   647                           psect	text130,local,class=CODE,delta=2
   648                           global __ptext130
   649  076A                     __ptext130:
   650                           
   651 ;; *************** function _pwm_set_duty_cycle *****************
   652 ;; Defined at:
   653 ;;		line 62 in file "E:\Cytron SVN\PTK40A (PIC Training Kit)\Source Code\Examples\Example 8\pwm.c"
   654 ;; Parameters:    Size  Location     Type
   655 ;;  ui_duty_cycl    2    0[COMMON] unsigned int 
   656 ;; Auto vars:     Size  Location     Type
   657 ;;		None
   658 ;; Return value:  Size  Location     Type
   659 ;;		None               void
   660 ;; Registers used:
   661 ;;		wreg, status,2, status,0
   662 ;; Tracked objects:
   663 ;;		On entry : 0/0
   664 ;;		On exit  : 0/0
   665 ;;		Unchanged: 0/0
   666 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   667 ;;      Params:         2       0       0       0       0
   668 ;;      Locals:         0       0       0       0       0
   669 ;;      Temps:          2       0       0       0       0
   670 ;;      Totals:         4       0       0       0       0
   671 ;;Total ram usage:        4 bytes
   672 ;; Hardware stack levels used:    1
   673 ;; This function calls:
   674 ;;		Nothing
   675 ;; This function is called by:
   676 ;;		_main
   677 ;;		_beep
   678 ;; This function uses a non-reentrant model
   679 ;;
   680                           psect	text130
   681                           	file	"E:\Cytron SVN\PTK40A (PIC Training Kit)\Source Code\Examples\Example 8\pwm.c"
   682                           	line	62
   683                           	global	__size_of_pwm_set_duty_cycle
   684  001F                     	__size_of_pwm_set_duty_cycle	equ	__end_of_pwm_set_duty_cycle-_pwm_set_duty_cycle
   685                           	
   686  076A                     _pwm_set_duty_cycle:	
   687                           	opt	stack 7
   688                           ; Regs used in _pwm_set_duty_cycle: [wreg+status,2+status,0]
   689                           	line	63
   690                           	
   691  076A                     l3175:	
   692                           ;pwm.c: 63: CCP1CON = (CCP1CON & 0b11001111) | (0b00110000 & ((unsigned char)(ui_duty_cy
                                 cle << 4)));
   693  076A  0870               	movf	(pwm_set_duty_cycle@ui_duty_cycle),w
   694  076B  00F2               	movwf	(??_pwm_set_duty_cycle+0)+0
   695  076C  3004               	movlw	04h
   696  076D                     u15:
   697  076D  1003               	clrc
   698  076E  0DF2               	rlf	(??_pwm_set_duty_cycle+0)+0,f
   699  076F  3EFF               	addlw	-1
   700  0770  1D03               	skipz
   701  0771  2F6D               	goto	u15
   702  0772  3030               	movlw	(030h)
   703  0773  0572               	andwf	0+(??_pwm_set_duty_cycle+0)+0,w
   704  0774  00F3               	movwf	(??_pwm_set_duty_cycle+1)+0
   705  0775  1283               	bcf	status, 5	;RP0=0, select bank0
   706  0776  1303               	bcf	status, 6	;RP1=0, select bank0
   707  0777  0817               	movf	(23),w
   708  0778  39CF               	andlw	0CFh
   709  0779  0473               	iorwf	0+(??_pwm_set_duty_cycle+1)+0,w
   710  077A  0097               	movwf	(23)	;volatile
   711                           	line	64
   712                           ;pwm.c: 64: CCPR1L = ui_duty_cycle >> 2;
   713  077B  0871               	movf	(pwm_set_duty_cycle@ui_duty_cycle+1),w
   714  077C  00F3               	movwf	(??_pwm_set_duty_cycle+0)+0+1
   715  077D  0870               	movf	(pwm_set_duty_cycle@ui_duty_cycle),w
   716  077E  00F2               	movwf	(??_pwm_set_duty_cycle+0)+0
   717  077F  3002               	movlw	02h
   718  0780                     u25:
   719  0780  1003               	clrc
   720  0781  0CF3               	rrf	(??_pwm_set_duty_cycle+0)+1,f
   721  0782  0CF2               	rrf	(??_pwm_set_duty_cycle+0)+0,f
   722  0783  3EFF               	addlw	-1
   723  0784  1D03               	skipz
   724  0785  2F80               	goto	u25
   725  0786  0872               	movf	0+(??_pwm_set_duty_cycle+0)+0,w
   726  0787  0095               	movwf	(21)	;volatile
   727                           	line	65
   728                           	
   729  0788                     l2102:	
   730  0788  0008               	return
   731                           	opt stack 0
   732                           GLOBAL	__end_of_pwm_set_duty_cycle
   733  0789                     	__end_of_pwm_set_duty_cycle:
   734 ;; =============== function _pwm_set_duty_cycle ends ============
   735                           
   736                           	signat	_pwm_set_duty_cycle,4216
   737                           	global	_pwm_initialize
   738                           psect	text131,local,class=CODE,delta=2
   739                           global __ptext131
   740  0748                     __ptext131:
   741                           
   742 ;; *************** function _pwm_initialize *****************
   743 ;; Defined at:
   744 ;;		line 29 in file "E:\Cytron SVN\PTK40A (PIC Training Kit)\Source Code\Examples\Example 8\pwm.c"
   745 ;; Parameters:    Size  Location     Type
   746 ;;		None
   747 ;; Auto vars:     Size  Location     Type
   748 ;;		None
   749 ;; Return value:  Size  Location     Type
   750 ;;		None               void
   751 ;; Registers used:
   752 ;;		wreg, status,2
   753 ;; Tracked objects:
   754 ;;		On entry : 0/0
   755 ;;		On exit  : 0/0
   756 ;;		Unchanged: 0/0
   757 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   758 ;;      Params:         0       0       0       0       0
   759 ;;      Locals:         0       0       0       0       0
   760 ;;      Temps:          0       0       0       0       0
   761 ;;      Totals:         0       0       0       0       0
   762 ;;Total ram usage:        0 bytes
   763 ;; Hardware stack levels used:    1
   764 ;; This function calls:
   765 ;;		Nothing
   766 ;; This function is called by:
   767 ;;		_main
   768 ;; This function uses a non-reentrant model
   769 ;;
   770                           psect	text131
   771                           	file	"E:\Cytron SVN\PTK40A (PIC Training Kit)\Source Code\Examples\Example 8\pwm.c"
   772                           	line	29
   773                           	global	__size_of_pwm_initialize
   774  0010                     	__size_of_pwm_initialize	equ	__end_of_pwm_initialize-_pwm_initialize
   775                           	
   776  0748                     _pwm_initialize:	
   777                           	opt	stack 7
   778                           ; Regs used in _pwm_initialize: [wreg+status,2]
   779                           	line	31
   780                           	
   781  0748                     l3155:	
   782                           ;pwm.c: 31: PR2 = 0xff;
   783  0748  30FF               	movlw	(0FFh)
   784  0749  1683               	bsf	status, 5	;RP0=1, select bank1
   785  074A  1303               	bcf	status, 6	;RP1=0, select bank1
   786  074B  0092               	movwf	(146)^080h	;volatile
   787                           	line	32
   788                           	
   789  074C                     l3157:	
   790                           ;pwm.c: 32: T2CKPS1 = 0;
   791  074C  1283               	bcf	status, 5	;RP0=0, select bank0
   792  074D  1303               	bcf	status, 6	;RP1=0, select bank0
   793  074E  1092               	bcf	(145/8),(145)&7
   794                           	line	33
   795                           	
   796  074F                     l3159:	
   797                           ;pwm.c: 33: T2CKPS0 = 1;
   798  074F  1412               	bsf	(144/8),(144)&7
   799                           	line	35
   800                           	
   801  0750                     l3161:	
   802                           ;pwm.c: 35: CCPR1L = 0;
   803  0750  0195               	clrf	(21)	;volatile
   804                           	line	36
   805                           	
   806  0751                     l3163:	
   807                           ;pwm.c: 36: TMR2ON = 1;
   808  0751  1512               	bsf	(146/8),(146)&7
   809                           	line	38
   810                           	
   811  0752                     l3165:	
   812                           ;pwm.c: 38: CCP1M3 = 1;
   813  0752  1597               	bsf	(187/8),(187)&7
   814                           	line	39
   815                           	
   816  0753                     l3167:	
   817                           ;pwm.c: 39: CCP1M2 = 1;
   818  0753  1517               	bsf	(186/8),(186)&7
   819                           	line	41
   820                           	
   821  0754                     l3169:	
   822                           ;pwm.c: 41: CCP1X = 0;
   823  0754  1297               	bcf	(189/8),(189)&7
   824                           	line	42
   825                           	
   826  0755                     l3171:	
   827                           ;pwm.c: 42: CCP1Y = 0;
   828  0755  1217               	bcf	(188/8),(188)&7
   829                           	line	43
   830                           	
   831  0756                     l3173:	
   832                           ;pwm.c: 43: CCPR1L = 0x00;
   833  0756  0195               	clrf	(21)	;volatile
   834                           	line	44
   835                           	
   836  0757                     l2099:	
   837  0757  0008               	return
   838                           	opt stack 0
   839                           GLOBAL	__end_of_pwm_initialize
   840  0758                     	__end_of_pwm_initialize:
   841 ;; =============== function _pwm_initialize ends ============
   842                           
   843                           	signat	_pwm_initialize,88
   844                           	global	_adc_on
   845                           psect	text132,local,class=CODE,delta=2
   846                           global __ptext132
   847  0740                     __ptext132:
   848                           
   849 ;; *************** function _adc_on *****************
   850 ;; Defined at:
   851 ;;		line 61 in file "E:\Cytron SVN\PTK40A (PIC Training Kit)\Source Code\Examples\Example 8\adc.c"
   852 ;; Parameters:    Size  Location     Type
   853 ;;		None
   854 ;; Auto vars:     Size  Location     Type
   855 ;;		None
   856 ;; Return value:  Size  Location     Type
   857 ;;		None               void
   858 ;; Registers used:
   859 ;;		None
   860 ;; Tracked objects:
   861 ;;		On entry : 0/0
   862 ;;		On exit  : 0/0
   863 ;;		Unchanged: 0/0
   864 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   865 ;;      Params:         0       0       0       0       0
   866 ;;      Locals:         0       0       0       0       0
   867 ;;      Temps:          0       0       0       0       0
   868 ;;      Totals:         0       0       0       0       0
   869 ;;Total ram usage:        0 bytes
   870 ;; Hardware stack levels used:    1
   871 ;; This function calls:
   872 ;;		Nothing
   873 ;; This function is called by:
   874 ;;		_main
   875 ;; This function uses a non-reentrant model
   876 ;;
   877                           psect	text132
   878                           	file	"E:\Cytron SVN\PTK40A (PIC Training Kit)\Source Code\Examples\Example 8\adc.c"
   879                           	line	61
   880                           	global	__size_of_adc_on
   881  0004                     	__size_of_adc_on	equ	__end_of_adc_on-_adc_on
   882                           	
   883  0740                     _adc_on:	
   884                           	opt	stack 7
   885                           ; Regs used in _adc_on: []
   886                           	line	63
   887                           	
   888  0740                     l3151:	
   889                           ;adc.c: 63: ADON = 1;
   890  0740  1283               	bcf	status, 5	;RP0=0, select bank0
   891  0741  1303               	bcf	status, 6	;RP1=0, select bank0
   892  0742  141F               	bsf	(248/8),(248)&7
   893                           	line	64
   894                           	
   895  0743                     l690:	
   896  0743  0008               	return
   897                           	opt stack 0
   898                           GLOBAL	__end_of_adc_on
   899  0744                     	__end_of_adc_on:
   900 ;; =============== function _adc_on ends ============
   901                           
   902                           	signat	_adc_on,88
   903                           	global	_adc_initialize
   904                           psect	text133,local,class=CODE,delta=2
   905                           global __ptext133
   906  0758                     __ptext133:
   907                           
   908 ;; *************** function _adc_initialize *****************
   909 ;; Defined at:
   910 ;;		line 27 in file "E:\Cytron SVN\PTK40A (PIC Training Kit)\Source Code\Examples\Example 8\adc.c"
   911 ;; Parameters:    Size  Location     Type
   912 ;;		None
   913 ;; Auto vars:     Size  Location     Type
   914 ;;		None
   915 ;; Return value:  Size  Location     Type
   916 ;;		None               void
   917 ;; Registers used:
   918 ;;		None
   919 ;; Tracked objects:
   920 ;;		On entry : 0/0
   921 ;;		On exit  : 0/0
   922 ;;		Unchanged: 0/0
   923 ;; Data sizes:     COMMON   BANK0   BANK1   BANK3   BANK2
   924 ;;      Params:         0       0       0       0       0
   925 ;;      Locals:         0       0       0       0       0
   926 ;;      Temps:          0       0       0       0       0
   927 ;;      Totals:         0       0       0       0       0
   928 ;;Total ram usage:        0 bytes
   929 ;; Hardware stack levels used:    1
   930 ;; This function calls:
   931 ;;		Nothing
   932 ;; This function is called by:
   933 ;;		_main
   934 ;; This function uses a non-reentrant model
   935 ;;
   936                           psect	text133
   937                           	file	"E:\Cytron SVN\PTK40A (PIC Training Kit)\Source Code\Examples\Example 8\adc.c"
   938                           	line	27
   939                           	global	__size_of_adc_initialize
   940  0012                     	__size_of_adc_initialize	equ	__end_of_adc_initialize-_adc_initialize
   941                           	
   942  0758                     _adc_initialize:	
   943                           	opt	stack 7
   944                           ; Regs used in _adc_initialize: []
   945                           	line	29
   946                           	
   947  0758                     l3149:	
   948                           ;adc.c: 29: ADCS2 = 1;
   949  0758  1683               	bsf	status, 5	;RP0=1, select bank1
   950  0759  1303               	bcf	status, 6	;RP1=0, select bank1
   951  075A  171F               	bsf	(1278/8)^080h,(1278)&7
   952                           	line	30
   953                           ;adc.c: 30: ADCS1 = 1;
   954  075B  1283               	bcf	status, 5	;RP0=0, select bank0
   955  075C  1303               	bcf	status, 6	;RP1=0, select bank0
   956  075D  179F               	bsf	(255/8),(255)&7
   957                           	line	31
   958                           ;adc.c: 31: ADCS0 = 0;
   959  075E  131F               	bcf	(254/8),(254)&7
   960                           	line	34
   961                           ;adc.c: 34: PCFG3 = 1;
   962  075F  1683               	bsf	status, 5	;RP0=1, select bank1
   963  0760  1303               	bcf	status, 6	;RP1=0, select bank1
   964  0761  159F               	bsf	(1275/8)^080h,(1275)&7
   965                           	line	35
   966                           ;adc.c: 35: PCFG2 = 1;
   967  0762  151F               	bsf	(1274/8)^080h,(1274)&7
   968                           	line	36
   969                           ;adc.c: 36: PCFG1 = 1;
   970  0763  149F               	bsf	(1273/8)^080h,(1273)&7
   971                           	line	37
   972                           ;adc.c: 37: PCFG0 = 0;
   973  0764  101F               	bcf	(1272/8)^080h,(1272)&7
   974                           	line	40
   975                           ;adc.c: 40: ADFM = 1;
   976  0765  179F               	bsf	(1279/8)^080h,(1279)&7
   977                           	line	43
   978                           ;adc.c: 43: ADON = 0;
   979  0766  1283               	bcf	status, 5	;RP0=0, select bank0
   980  0767  1303               	bcf	status, 6	;RP1=0, select bank0
   981  0768  101F               	bcf	(248/8),(248)&7
   982                           	line	44
   983                           	
   984  0769                     l687:	
   985  0769  0008               	return
   986                           	opt stack 0
   987                           GLOBAL	__end_of_adc_initialize
   988  076A                     	__end_of_adc_initialize:
   989 ;; =============== function _adc_initialize ends ============
   990                           
   991                           	signat	_adc_initialize,88
   992                           psect	text134,local,class=CODE,delta=2
   993                           global __ptext134
   994  0000                     __ptext134:
   995                           	global	btemp
   996  007E                     	btemp set 07Eh
   997                           
   998                           	DABS	1,126,2	;btemp
   999                           	global	wtemp0
  1000  007E                     	wtemp0 set btemp


HI-TECH Software PICC Macro Assembler V9.83 build 10920 
Symbol Table                                                                                   Sat Apr 20 17:24:57 2013

                ui_adc_read@temp 0074                               _RD 0C60                               u15 076D  
                             u25 0780                               _WR 0C61                              l690 0743  
                            l687 0769                              l696 079C                              l697 079C  
                            l698 07A1                              l699 07BB                              _GIE 005F  
                            _RB4 0034                              _RB5 0035                              _PR2 0092  
                           l2102 0788                             l1400 07FC                             l1401 07FD  
                           l1402 07FD                             l3151 0740                             l3161 0750  
                           l2099 0757                             l3171 0755                             l3163 0751  
                           l3155 0748                             l4051 078F                             l1396 07E3  
                           l3149 0758                             l3173 0756                             l3165 0752  
                           l3157 074C                             l4061 07B4                             l4053 0790  
                           l4045 0789                             l1397 07FA                             l1398 07FB  
                           l3167 0753                             l3159 074F                             l3175 076A  
                           l4063 07BB                             l4055 0798                             l4047 078B  
                           l1399 07FC                             l4071 07CB                             l3169 0754  
                           l4057 07A1                             l4049 078E                             l4081 07D9  
                           l4073 07CD                             l4065 07BC                             l4059 07AB  
                           l4083 07DE                             l4075 07CE                             l4067 07C5  
                           l4085 07E1                             l4077 07CF                             l4069 07C9  
                           l4087 07E3                             l4079 07D4                             l4089 07EE  
                           _ADFM 04FF                             _ADON 00F8                             _CHS0 00FB  
                           _CHS1 00FC                             _CHS2 00FD                             u2260 07A0  
                           u2261 079F                             u2277 0794                             _WREN 0C62  
                           _main 07BC                             btemp 007E                             start 0000  
                 _pwm_initialize 0748                            _ADCS0 00FE                            _ADCS1 00FF  
                          _ADCS2 04FE                            ?_main 0070                            _CCP1X 00BD  
                          _CCP1Y 00BC                            _EEADR 010D                            _CARRY 0018  
                          _PCFG0 04F8                            _PCFG1 04F9                            _PCFG2 04FA  
                          _PCFG3 04FB                            _PORTA 0005                            _PORTB 0006  
                          _PORTC 0007                            _PORTD 0008                            _PORTE 0009  
                          _TRISA 0085                            _TRISB 0086                            _TRISC 0087  
                          _TRISD 0088                            _TRISE 0089                            status 0003  
         __end_of_pwm_initialize 0758                            wtemp0 007E                     __end_of_main 0800  
                         ??_main 0076                     ?_ui_adc_read 0070                           _CCP1M2 00BA  
                         _CCP1M3 00BB                           _ADRESH 001E                           _ADRESL 009E  
                         _EEDATA 010C                           _CCPR1L 0015                           _EECON1 018C  
                         _EECON2 018D                           _TMR2ON 0092                  ?_pwm_initialize 0070  
    __size_of_pwm_set_duty_cycle 001F                           _adc_on 0740          __size_of_adc_initialize 0012  
                 __pcstackCOMMON 0070                       __pmaintext 07BC                          ?_adc_on 0070  
                        _CCP1CON 0017                          _T2CKPS0 0090                          _T2CKPS1 0091  
                        _GO_DONE 00FA             __size_of_ui_adc_read 0033                   _adc_initialize 0758  
                __size_of_adc_on 0004                 ??_pwm_initialize 0070             end_of_initialization 0744  
         __end_of_adc_initialize 076A       __end_of_pwm_set_duty_cycle 0789                  ?_adc_initialize 0070  
                 __end_of_adc_on 0744  pwm_set_duty_cycle@ui_duty_cycle 0070              start_initialization 0744  
                       ??_adc_on 0070                        __ptext130 076A                        __ptext131 0748  
                      __ptext132 0740                        __ptext133 0758                        __ptext134 0000  
                      __ptext128 0000                        __ptext129 0789                    ??_ui_adc_read 0072  
                      main@speed 0076                 ??_adc_initialize 0070              __end_of_ui_adc_read 07BC  
             _pwm_set_duty_cycle 076A              ?_pwm_set_duty_cycle 0070                    __size_of_main 0044  
           ??_pwm_set_duty_cycle 0072          __size_of_pwm_initialize 0010                      _ui_adc_read 0789  
